
package umldc.GUI;

import umldc.data.CMethod;
import umldc.data.ClassObject;
import umldc.data.Attribute;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.concurrent.CopyOnWriteArrayList;
import static javax.lang.model.SourceVersion.isName;
import javax.swing.*;
import umldc.data.IClassObserver;

/**
 *
 * @author rayha
 */
public class AddClassDialog extends javax.swing.JDialog implements IClassObserver {

    /**
     * Creates new form AddClassDialog
     */
    private MyGUI parent;
    
    /**
     *
     * @param parent the JFrame that ran this dialog
     * @param modal true if you want this dialog to be modal, otherwise false
     */
    public AddClassDialog(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.parent = (MyGUI)parent;
        classOb = new ClassObject();
        classOb.registerObserver(this);
        
        this.addWindowListener(new WindowAdapter() {
            
            public void windowClosing(WindowEvent e) {
                classOb.removeObserver((AddClassDialog)e.getWindow());
                
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        fieldClassName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        buttonAddVar = new javax.swing.JButton();
        sPVarList = new javax.swing.JScrollPane();
        variableListView = new javax.swing.JList<>();
        buttonRemVar = new javax.swing.JButton();
        buttonEditVar = new javax.swing.JButton();
        buttonSubmit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        sPMethList = new javax.swing.JScrollPane();
        methodListView = new javax.swing.JList<>();
        buttonAddMeth = new javax.swing.JButton();
        buttonEditMeth = new javax.swing.JButton();
        buttonRemMeth = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Class");
        setMinimumSize(new java.awt.Dimension(500, 200));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Class Name: ");
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jLabel1, gridBagConstraints);

        fieldClassName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        fieldClassName.setPreferredSize(new java.awt.Dimension(100, 22));
        fieldClassName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldClassNameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(fieldClassName, gridBagConstraints);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Variables: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jLabel2, gridBagConstraints);

        buttonAddVar.setText("Add Variable");
        buttonAddVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddVarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(buttonAddVar, gridBagConstraints);

        sPVarList.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        sPVarList.setAutoscrolls(true);

        variableListView.setModel(varsListModel);
        variableListView.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        variableListView.setMaximumSize(new java.awt.Dimension(46, 500));
        variableListView.setVisibleRowCount(4);
        sPVarList.setViewportView(variableListView);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(sPVarList, gridBagConstraints);

        buttonRemVar.setText("Remove");
        buttonRemVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemVarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(buttonRemVar, gridBagConstraints);

        buttonEditVar.setText("Edit");
        buttonEditVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditVarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        getContentPane().add(buttonEditVar, gridBagConstraints);

        buttonSubmit.setText("Add Class");
        buttonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSubmitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        getContentPane().add(buttonSubmit, gridBagConstraints);

        jLabel3.setText("Methods:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jLabel3, gridBagConstraints);

        sPMethList.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        sPMethList.setAutoscrolls(true);

        methodListView.setModel(methsListModel);
        methodListView.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        methodListView.setMaximumSize(new java.awt.Dimension(46, 500));
        methodListView.setVisibleRowCount(4);
        sPMethList.setViewportView(methodListView);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(sPMethList, gridBagConstraints);

        buttonAddMeth.setText("Add Method");
        buttonAddMeth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddMethActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(buttonAddMeth, gridBagConstraints);

        buttonEditMeth.setText("Edit");
        buttonEditMeth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditMethActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        getContentPane().add(buttonEditMeth, gridBagConstraints);

        buttonRemMeth.setText("Remove");
        buttonRemMeth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemMethActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(buttonRemMeth, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldClassNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldClassNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldClassNameActionPerformed

    private void buttonAddVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddVarActionPerformed
        
        AddVariableDialog addVarDialog = new AddVariableDialog(null, true, classOb);
        addVarDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        addVarDialog.pack();
        addVarDialog.setLocationRelativeTo(this);
        addVarDialog.setVisible(true);
    }//GEN-LAST:event_buttonAddVarActionPerformed

    private void buttonRemVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemVarActionPerformed
        
        classOb.removeAttribute(variableListView);
        
        System.out.println(classOb.getAttributes());
        System.out.println("************************");
        System.out.println(varsListModel);
        
    }//GEN-LAST:event_buttonRemVarActionPerformed

    private void buttonEditVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditVarActionPerformed
        if (!classOb.getAttributes().isEmpty() && !variableListView.isSelectionEmpty()) {
            
            varSelectedIndex = variableListView.getSelectedIndex();
            EditVariableDialog editVarDialog = new EditVariableDialog(null, true, classOb, varSelectedIndex);
            editVarDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            editVarDialog.pack();
            editVarDialog.setLocationRelativeTo(this);
            editVarDialog.setVisible(true);
            
        }
        
        
        
    }//GEN-LAST:event_buttonEditVarActionPerformed

    private void buttonAddMethActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddMethActionPerformed
        
        AddMethodDialog addMethDialog = new AddMethodDialog(null, true, classOb);
        
        addMethDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        addMethDialog.pack();
        addMethDialog.setLocationRelativeTo(this);
        addMethDialog.setVisible(true);
        
        
        
    }//GEN-LAST:event_buttonAddMethActionPerformed

    private void buttonEditMethActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditMethActionPerformed
               
        
        
        
        if (!classOb.getMethods().isEmpty() && !methodListView.isSelectionEmpty()) {
            
            int selectedMethodIndex = methodListView.getSelectedIndex();
            CMethod methh = methods.get(selectedMethodIndex);
            System.out.println("METHOD REFERENCE");
            System.out.println(methh.hashCode());
            methh.setState(methh);
            
            AddMethodDialog editMethDialog = new EditMethodDialog(null, true, classOb, selectedMethodIndex);
            editMethDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            editMethDialog.pack();
            editMethDialog.setLocationRelativeTo(this);
            editMethDialog.setVisible(true);
            System.out.println(classOb.getMethods());
            
        }
    }//GEN-LAST:event_buttonEditMethActionPerformed

    private void buttonRemMethActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemMethActionPerformed
        classOb.removeMethod(methodListView);
        
        System.out.println("Class Ob");
        System.out.println(classOb);
        System.out.println("Class Ob Methods");
        System.out.println(classOb.getMethods());
        System.out.println("Method List Model");
        System.out.println(methsListModel);
    }//GEN-LAST:event_buttonRemMethActionPerformed

    private void buttonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSubmitActionPerformed
        
        String className = fieldClassName.getText().trim();
        if(isName(className) && !parent.classExists(classOb)){
            classOb.setClassName(className);
            parent.addClass(classOb);
            parent.repaint();
            dispose();
        } else {
            JOptionPane.showMessageDialog(this,
                    "Class name is invalid or already exists",
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
        }
        
        
    }//GEN-LAST:event_buttonSubmitActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddClassDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddClassDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddClassDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddClassDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddClassDialog dialog = new AddClassDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    /**
     *
     * @return the JList called variableListView
     */
    public JList<String> getVariableListView() {
        return variableListView;
    }

    /**
     *
     * @return the DefaultListModel called varsListModel
     */
    public DefaultListModel getVarsListModel() {
        return varsListModel;
    }

    /**
     *
     * @return the classOb
     */
    public ClassObject getClassOb() {
        return classOb;
    }

    /**
     *
     * @return  JList called methodListView
     */
    public JList<String> getMethodListView() {
        return methodListView;
    }

    /**
     *
     * @return DefaultListModel called methsListModel
     */
    public DefaultListModel getMethsListModel() {
        return methsListModel;
    }
 
    /**
     *
     * @param cOb The class object to update
     */
    @Override
    public void update(ClassObject cOb) {
        this.classOb = cOb;
        varsListModel.clear();
        methsListModel.clear();
        CopyOnWriteArrayList<Attribute> variables= this.classOb.getAttributes();
        methods= this.classOb.getMethods();
        
        if (!variables.isEmpty()) {
            for (Attribute var : variables) {
                varsListModel.addElement(var);
            }
        }
        
        if (!methods.isEmpty()) {
            for (CMethod meth : methods) {
                methsListModel.addElement(meth);
            }
        }
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddMeth;
    private javax.swing.JButton buttonAddVar;
    private javax.swing.JButton buttonEditMeth;
    private javax.swing.JButton buttonEditVar;
    private javax.swing.JButton buttonRemMeth;
    private javax.swing.JButton buttonRemVar;
    private javax.swing.JButton buttonSubmit;
    private javax.swing.JTextField fieldClassName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> methodListView;
    private javax.swing.JScrollPane sPMethList;
    private javax.swing.JScrollPane sPVarList;
    private javax.swing.JList<String> variableListView;
    // End of variables declaration//GEN-END:variables

  private DefaultListModel varsListModel = new DefaultListModel();
    private DefaultListModel methsListModel = new DefaultListModel();
    CopyOnWriteArrayList<CMethod> methods;
    private ClassObject classOb;
    private int varSelectedIndex;

    

}
